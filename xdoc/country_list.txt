// Models for country and cities

# models.py
from django.db import models

class Country(models.Model):
    code = models.CharField(max_length=15, unique=True)
    name = models.CharField(max_length=100)

    def __str__(self):
        return self.name

class City(models.Model):
    code = models.CharField(max_length=15)
    name = models.CharField(max_length=100)
    country = models.ForeignKey(Country, on_delete=models.CASCADE, related_name='cities')

    def __str__(self):
        return self.name



// Views for showing the country and cities

# views.py
from django.shortcuts import render
from django.http import JsonResponse
from .models import Country, City

def country_city_view(request):
    countries = Country.objects.all()
    cities = []
    selected_country_id = request.GET.get('country')

    if selected_country_id:
        # Fetch cities only if a country is selected
        cities = City.objects.filter(country_id=selected_country_id)

    context = {
        'countries': countries,
        'cities': cities,
        'selected_country_id': selected_country_id,
    }
    return render(request, 'services/country_city.html', context)

def load_cities(request):
    country_id = request.GET.get('country_id')
    if not country_id:
        return JsonResponse({"error": "Country ID not provided"}, status=400)

    # Fetch only the cities belonging to the selected country
    cities = City.objects.filter(country_id=country_id).values('id', 'name')
    return JsonResponse(list(cities), safe=False)



// Views for city and country form

from django.shortcuts import render, redirect
from .models import Country, City

def create_country(request):
    if request.method == 'POST':
        code = request.POST.get('code')
        name = request.POST.get('name')
        if code and name:  # Basic validation
            Country.objects.create(code=code, name=name)
            return redirect('country_city_view')  # Replace 'country_list' with the actual URL for listing countries
    return render(request, 'services/create_country.html')

def create_city(request):
    if request.method == 'POST':
        code = request.POST.get('code')
        name = request.POST.get('name')
        country_id = request.POST.get('country')
        try:
            country = Country.objects.get(id=country_id)
            if code and name and country:  # Basic validation
                City.objects.create(code=code, name=name, country=country)
                return redirect('country_city_view')  # Replace 'city_list' with the actual URL for listing cities
        except Country.DoesNotExist:
            # Handle the case where the country ID is invalid
            pass
    countries = Country.objects.all()  # For dropdown selection
    return render(request, 'services/create_city.html', {'countries': countries})




// urls.py

# urls.py
from django.urls import path
from .views import country_city_view, load_cities, create_country, create_city

urlpatterns = [
    path('country-city/', country_city_view, name='country_city_view'),
    path('load-cities/', load_cities, name='load_cities'),  # AJAX URL for loading cities
    path('create-country/',create_country, name='create_country'),
    path('create-city/', create_city, name='create_city'),
]







// country and city view page

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Select Country and City</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 20px;
        padding: 0;
        background-color: #f9f9f9;
      }
      h1 {
        color: #333;
      }
      label {
        font-weight: bold;
      }
      select {
        margin: 10px 0;
        padding: 5px;
        width: 200px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }
      .btn-link {
        display: inline-block;
        margin-top: 15px;
        padding: 8px 12px;
        color: white;
        background-color: #007bff;
        text-decoration: none;
        border-radius: 4px;
      }
      .btn-link:hover {
        background-color: #0056b3;
      }
    </style>
  </head>
  <body>
    <h1>Select Country and City</h1>

    <label for="country">Country:</label>
    <select id="country" name="country">
      <option value="">Select a country</option>
      {% for country in countries %}
      <option value="{{ country.id }}">{{ country.name }}</option>
      {% endfor %}
    </select>

    <br />

    <label for="city">City:</label>
    <select id="city" name="city">
      <option value="">Select a city</option>
    </select>

    <div>
      <a href="{% url 'create_country' %}" class="btn-link">Create Country</a>
      <a href="{% url 'create_city' %}" class="btn-link">Create City</a>
    </div>

    <script type="text/javascript">
      $(document).ready(function () {
        // Event listener for country dropdown changes
        $("#country").on("change", function () {
          var countryId = $(this).val();

          // Clear the city dropdown and add default option
          $("#city").empty().append('<option value="">Select a city</option>');

          // Check if a country is selected
          if (countryId) {
            // AJAX call to fetch cities based on selected country
            $.ajax({
              url: "{% url 'load_cities' %}", // Django URL reverse
              data: { country_id: countryId }, // Send country_id as a GET parameter
              dataType: "json",
              success: function (data) {
                // Populate city dropdown with received data
                $.each(data, function (index, city) {
                  $("#city").append(
                    $("<option></option>").val(city.id).text(city.name)
                  );
                });
              },
              error: function () {
                alert("Error loading cities. Please try again.");
              },
            });
          }
        });
      });
    </script>
  </body>
</html>









// create country form

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Create Country</title>
  </head>
  <body>
    <h1>Create Country</h1>
    <form method="post">
      {% csrf_token %}
      <label for="code">Country Code:</label>
      <input type="text" name="code" id="code" required /><br /><br />

      <label for="name">Country Name:</label>
      <input type="text" name="name" id="name" required /><br /><br />

      <button type="submit">Save Country</button>
    </form>
    <a href="{% url 'country_city_view' %}">Back to Country List</a>
  </body>
</html>



// create city form

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Create City</title>
  </head>
  <body>
    <h1>Create City</h1>
    <form method="post">
      {% csrf_token %}
      <label for="code">City Code:</label>
      <input type="text" name="code" id="code" required /><br /><br />

      <label for="name">City Name:</label>
      <input type="text" name="name" id="name" required /><br /><br />

      <label for="country">Country:</label>
      <select name="country" id="country" required>
        {% for country in countries %}
        <option value="{{ country.id }}">{{ country.name }}</option>
        {% endfor %}</select
      ><br /><br />

      <button type="submit">Save City</button>
    </form>
    <a href="{% url 'country_city_view' %}">Back to City List</a>
  </body>
</html>
